/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */


import { HTMLStencilElement, JSXBase } from '@stencil/core/internal';


export namespace Components {
  interface AuiButton {
    'color': 'primary' | 'accent' | 'light';
    'disabled': boolean;
    'label': string;
    'shape': 'square' | 'round';
    'size': 'small' | 'default' | 'large';
    'type': 'button' | 'reset' | 'submit';
    'variant': 'outlined' | 'contained';
  }
  interface MyButton {
    'label': string;
  }
  interface MyComponent {
    /**
    * The first name
    */
    'first': string;
    /**
    * The last name
    */
    'last': string;
    /**
    * The middle name
    */
    'middle': string;
  }
}

declare global {


  interface HTMLAuiButtonElement extends Components.AuiButton, HTMLStencilElement {}
  var HTMLAuiButtonElement: {
    prototype: HTMLAuiButtonElement;
    new (): HTMLAuiButtonElement;
  };

  interface HTMLMyButtonElement extends Components.MyButton, HTMLStencilElement {}
  var HTMLMyButtonElement: {
    prototype: HTMLMyButtonElement;
    new (): HTMLMyButtonElement;
  };

  interface HTMLMyComponentElement extends Components.MyComponent, HTMLStencilElement {}
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    'aui-button': HTMLAuiButtonElement;
    'my-button': HTMLMyButtonElement;
    'my-component': HTMLMyComponentElement;
  }
}

declare namespace LocalJSX {
  interface AuiButton {
    'color'?: 'primary' | 'accent' | 'light';
    'disabled'?: boolean;
    'label'?: string;
    'onClickEvent'?: (event: CustomEvent<any>) => void;
    'shape'?: 'square' | 'round';
    'size'?: 'small' | 'default' | 'large';
    'type'?: 'button' | 'reset' | 'submit';
    'variant'?: 'outlined' | 'contained';
  }
  interface MyButton {
    'label'?: string;
    'onOnClick'?: (event: CustomEvent<any>) => void;
  }
  interface MyComponent {
    /**
    * The first name
    */
    'first'?: string;
    /**
    * The last name
    */
    'last'?: string;
    /**
    * The middle name
    */
    'middle'?: string;
  }

  interface IntrinsicElements {
    'aui-button': AuiButton;
    'my-button': MyButton;
    'my-component': MyComponent;
  }
}

export { LocalJSX as JSX };


declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      'aui-button': LocalJSX.AuiButton & JSXBase.HTMLAttributes<HTMLAuiButtonElement>;
      'my-button': LocalJSX.MyButton & JSXBase.HTMLAttributes<HTMLMyButtonElement>;
      'my-component': LocalJSX.MyComponent & JSXBase.HTMLAttributes<HTMLMyComponentElement>;
    }
  }
}


